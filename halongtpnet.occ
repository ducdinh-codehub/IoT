
-- processus : 6
-- min fanout : 3
-- max fanout : 5
-- channels   : 26


--generated  at 23 juillet 2021 11:23:01
--generic synchronous network model
--Bernard Pottier. UBO
-- include data file for physical simulation   
--#INCLUDE   "/home/netgen/VW83/Generated/halongtp/halongtpData0.occ"
#INCLUDE "halongtpData0.occ"


VAL [6][2]BYTE NetProcess IS [   "P1", -- id: 1
  "P2", -- id: 2
  "P3", -- id: 3
  "P4", -- id: 4
  "P5", -- id: 5
  "P6"]:

VAL [6][4]BYTE NetProcedure IS [   "Node", -- id: 1
  "Node", -- id: 2
  "Node", -- id: 3
  "Node", -- id: 4
  "Node", -- id: 5
  "Node"]:

DATA TYPE Location
  RECORD
    INT xLoc:
    INT yLoc:
    INT elevation:
    INT range:
:
VAL [6] Location  NetLocation IS [   [331 , 197 , 0 , 211 ] , -- id: 1
  [207 , 215 , 0 , 211 ] , -- id: 2
  [124 , 303 , 0 , 211 ] , -- id: 3
  [177 , 307 , 0 , 211 ] , -- id: 4
  [289 , 322 , 0 , 211 ] , -- id: 5
  [350 , 263 , 0 , 211 ] ]:


#USE "course.lib"


VAL INT MaxFanOut IS 5:

VAL INT MaxNodes IS 6:

#INCLUDE "nodes-test-include.occ"

PROC halongtpnet(CHAN OF BYTE stdin, stdout, stderr)


   -- Channel declarations 
  CHAN OF diam.proto P1.P2,P1.P4,P1.P5,P1.P6:
  CHAN OF diam.proto P2.P1,P2.P3,P2.P4,P2.P5,P2.P6:
  CHAN OF diam.proto P3.P2,P3.P4,P3.P5:
  CHAN OF diam.proto P4.P1,P4.P2,P4.P3,P4.P5,P4.P6:
  CHAN OF diam.proto P5.P1,P5.P2,P5.P3,P5.P4,P5.P6:
  CHAN OF diam.proto P6.P1,P6.P2,P6.P4,P6.P5:

  -- Channel table declaration for nodes 
  P1.out IS [ P1.P2,P1.P4,P1.P5,P1.P6 ]:
  P1.in IS [ P2.P1,P4.P1,P5.P1,P6.P1 ]:
  P2.out IS [ P2.P1,P2.P3,P2.P4,P2.P5,P2.P6 ]:
  P2.in IS [ P1.P2,P3.P2,P4.P2,P5.P2,P6.P2 ]:
  P3.out IS [ P3.P2,P3.P4,P3.P5 ]:
  P3.in IS [ P2.P3,P4.P3,P5.P3 ]:
  P4.out IS [ P4.P1,P4.P2,P4.P3,P4.P5,P4.P6 ]:
  P4.in IS [ P1.P4,P2.P4,P3.P4,P5.P4,P6.P4 ]:
  P5.out IS [ P5.P1,P5.P2,P5.P3,P5.P4,P5.P6 ]:
  P5.in IS [ P1.P5,P2.P5,P3.P5,P4.P5,P6.P5 ]:
  P6.out IS [ P6.P1,P6.P2,P6.P4,P6.P5 ]:
  P6.in IS [ P1.P6,P2.P6,P4.P6,P5.P6 ]:


  -- Program Body 

  [MaxNodes]CHAN OF BYTE toMux:
  PAR
    Node(P1.in, P1.out,0, toMux [0])
    Node(P2.in, P2.out,1, toMux [1])
    Node(P3.in, P3.out,2, toMux [2])
    Node(P4.in, P4.out,3, toMux [3])
    Node(P5.in, P5.out,4, toMux [4])
    Node(P6.in, P6.out,5, toMux [5])
    Mux(toMux,stdout)
     -- End of program body 
:
